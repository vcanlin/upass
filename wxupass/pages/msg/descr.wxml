<!--descr.wxml-->
<view class="page">
  <view class="text-con">

      <block wx:if="{{view == 'p1'}}">
        <text class="descr">{{text}}</text>
      </block>

      <block wx:if="{{view == 'p2'}}">
        <view class="line"> 
1976年，两位美国计算机学家Whitfield Diffie 和 Martin Hellman，提出了一种崭新构思的信息加密方案
可以在不直接传递密钥的情况下，完成解密。这被称为“Diffie-Hellman密钥交换算法”。
这个算法启发了其他科学家。
人们认识到，加密和解密可以使用不同的规则，
只要这两种规则之间存在某种对应关系即可，这样就避免了直接传递密钥。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
1977年，三位数学家Rivest、Shamir 和 Adleman 设计了一种算法，可以实现非对称加密。
这种算法用他们三个人的名字命名，叫做RSA算法。
从那时直到现在，RSA算法一直是最广为使用的”非对称加密算法”
        </view>
        <view class="line"> 
非对称的情况下:
每个用户都有两把钥匙，一把公钥一把私钥。
用该用户的公钥加密后只能该用户的私钥才能解密。
这种情况下，公钥是用来加密信息的，确保只有特定的拥有私钥的人才能解密该信息。
反之，亦然。
公钥用来解密信息，确保让别人知道这条信息是真的由我发布的。
接收者由此可知这条信息确实来自于拥有私钥的某人，
这被称作数字签名，公钥的形式就是数字证书。
        </view>
        <view class="line"> 
这种算法非常可靠，密钥越长，它就越难破解。
根据已经披露的文献，目前被破解的最长RSA密钥是768个二进制位。
也就是说，长度超过768位的密钥，还无法破解（至少没人公开宣布）。
因此可以认为，1024位的RSA密钥基本安全，2048位的密钥极其安全。
        </view>
        <view class="line"> 
大整数的因数分解，是一件非常困难的事情。
目前，除了暴力破解，还没有发现别的有效方法。
维基百科这样写道：
        </view>
        <view class="line"> 
“对极大整数做因数分解的难度决定了RSA算法的可靠性。换言之，对一极大整数做因数分解愈困难，RSA算法愈可靠。

假如有人找到一种快速因数分解的算法，那么RSA的可靠性就会极度下降。但找到这样的算法的可能性是非常小的。今天只有短的RSA密钥才可能被暴力破解。到2008年为止，世界上还没有任何可靠的攻击RSA算法的方式。

只要密钥长度足够长，用RSA加密的信息实际上是不能被解破的。”
        </view>
        <view class="line"> 
举例来说，你可以对3233进行因数分解（61×53），但是你没法对下面这个整数进行因数分解。
        </view>
        <view class="line"> 
12301866845301177551304949
58384962720772853569595334
79219732245215172640050726
36575187452021997864693899
56474942774063845925192557
32630345373154826850791702
61221429134616704292143116
02221240479274737794080665
351419597459856902143413
它等于这样两个质数的乘积：
        </view>
        <view class="line"> 
33478071698956898786044169
84821269081770479498371376
85689124313889828837938780
02287614711652531743087737
814467999489
        </view>
        <view class="line"> 
X
        </view>
        <view class="line"> 
36746043666799590428244633
79962795263227915816434308
76426760322838157396665112
79233373417143396810270092
798736308917
        </view>
        <view class="line"> 
事实上，这大概是人类已经分解的最大整数（232个十进制位，768个二进制位）。
比它更大的因数分解，还没有被报道过，因此目前被破解的最长RSA密钥就是768位。
        </view>
        <view class="line"> 
目前常用的类似这种加解密使用不同规则的非对称算法主要有
RSA, EI Gamal, ECC, Knapsack, 等等。
其中RSA是企业级应用标准
        </view>
        <!--<view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>
        <view class="line"> 
这种新的加密模式被称为”非对称加密算法”。
        </view>-->
      </block>

      <block wx:if="{{view == 'p3'}}">
        <view class="line"> 
AES（The Advanced Encryption Standard）是美国国家标准与技术研究所用于加密电子数据的规范。
它被预期能成为人们公认的加密包括金融、电信和政府数字信息的方法。 
        </view>
        <view class="line"> 
这个标准用来替代原先的DES，已经被多方分析且广为全世界所使用。
经过五年的甄选流程，高级加密标准由美国国家标准与技术研究院 （NIST）于2001年11月26日发布于FIPS PUB 197，并在2002年5月26日成为有效的标准。
        </view>
        <view class="line"> 
AES 是一个迭代的、对称密钥分组的密码，它可以使用128、192 和 256 位密钥，并且用 128 位（16字节）分组加密和解密数据。与公共密钥密码使用密钥对不同，对称密钥密码使用相同的密钥加密和解密数据。通过分组密码返回的加密数据 的位数与输入数据相同。迭代加密使用一个循环结构，在该循环中重复置换（permutations ）和替换(substitutions）输入数据。
        </view>
        <view class="line"> 
高级数据加密标准
对称密码体制的发展趋势将以分组密码为重点。分组密码算法通常由密钥扩展算法和加密（解密）算法两部分组成。密钥扩展算法将b字节用户主密钥扩展成r个子密钥。加密算法由一个密码学上的弱函数f与r个子密钥迭代r次组成。混乱和密钥扩散是分组密码算法设计的基本原则。
抵御已知明文的差分和线性攻击，可变长密钥和分组是该体制的设计要点。
        </view>
        <view class="line"> 
破解AES 256位加密有多难？
        </view>
        <view class="line"> 
3×10^23等于宇宙中恒星的数量，大于地球中沙子的数量。
        </view>
        <view class="line"> 
2^256>2^(10*25)>10^(3*25)=10^75>>>3×10^23
        </view>
         <view class="line"> 
现在问题来了。假设你能够把每一粒沙子做出一个存储设备，存一个值。你只能存储3*10^23个不同的答案。
而你没法全部试一遍。（只考虑存储）。如果是1秒钟尝试20亿亿次不同的组合。那么需要10^75/（20*10^8*10^8*86400*365）=10^58/86400/365/2>10^50年。这么长时间远远大于太阳的寿命，6*10^9亿年。
        </view>
        <view class="line"> 参考：</view>
        <view class="line"> 
https://www.zhihu.com/question/34563299/answer/59176478
        </view>
        <view class="line"> 
http://www.2cto.com/article/201112/113465.html
        </view>
      </block>

  </view>
</view>